function [sys,x0]=ArmAnimation(t,x,u,flag,ts,theta0,links);% S-function for animating the motion of a planar arm.%%   Gaurav & Stefan, Jan. 1999%global ArmAnimation;n_joints = length(theta0);theta=u;if flag==2, % update the animation	if any(get(0,'Children')==ArmAnimation),		if strcmp(get(ArmAnimation,'Name'),'Arm Animation'),			set(0,'currentfigure',ArmAnimation);			hndlList=get(gca,'UserData');						n_joints = length(links);						sum_thetas = 0;			X=zeros(n_joints+1,1);			Y=zeros(n_joints+1,1);			for i=1:n_joints,        if mod(i,2)==1, % revolute joint          sum_thetas = sum_thetas + theta(i);          X(i+1) = X(i)+cos(sum_thetas)*links(i);          Y(i+1) = Y(i)+sin(sum_thetas)*links(i);        else          X(i+1) = X(i)+cos(sum_thetas)*(links(i)+theta(i));          Y(i+1) = Y(i)+sin(sum_thetas)*(links(i)+theta(i));        end				if mod(t,ts)==0,					set(hndlList(i),'XData',X(i:i+1),'YData',Y(i:i+1));				end;			end;			if mod(t,ts)==0,				drawnow;			end;		end	end  sys=[];	elseif flag == 3 % Return output	sys=[];	elseif flag == 4 % Return next sample hit	sys = [];	elseif flag==0,  % Initialize the figure for use with this simulation  ArmAnimation = animinit('Arm Animation');  set(ArmAnimation,'HandleVisibility','on');  %[flag,ArmAnimation] = figflag('Arm Animation');  axis([-1 1 -1 1]);  hold on;	theta = theta0;		sum_thetas = 0;	X=zeros(n_joints+1,1);	Y=zeros(n_joints+1,1);	for i=1:n_joints,    if mod(i,2)==1, % revolute joint  		sum_thetas = sum_thetas + theta(i);      X(i+1) = X(i)+cos(sum_thetas)*links(i);      Y(i+1) = Y(i)+sin(sum_thetas)*links(i);    else      X(i+1) = X(i)+cos(sum_thetas)*(links(i)+theta(i));      Y(i+1) = Y(i)+sin(sum_thetas)*(links(i)+theta(i));    end    if mod(i,2)==1, % revolute joint      hndlList(i)=plot(X(i:i+1),Y(i:i+1),'LineWidth',5,'Color',[1,1,1]*0.1*i,'EraseMode','background');    else      hndlList(i)=plot(X(i:i+1),Y(i:i+1),'LineWidth',2,'Color',[1,0,1]*0.1*i,'EraseMode','background');    end  end;  set(gca,'DataAspectRatio',[1 1 1]);  set(gca,'UserData',hndlList);	  sys=[0 0 0 n_joints 0 0]; % the non-zero number indicates the number of inputs  x0=[];	end